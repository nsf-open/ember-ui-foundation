$_count: 1;
$_max: 10;

/**
 * Utility classes to bump margins and padding around by single pixel values.
 * Where # is a number between 1 and 10.
 *
 * e.g. ".m-5px" = margin: 5px;
 * e.g. ".pt-7px" = padding-top: 7px;
 *
 * _Margins_
 * .m-#px   - All margins
 * .mx-#px  - X axis margins, left/right
 * .my-#px  - Y axis margins, top/bottom
 * .mt-#px  - Top margin
 * .mr-#px  - Right margin
 * .mb-#px  - Bottom margin
 * .ml-#px  - Left margin
 *
 * _Padding_
 * .p-#px   - All padding
 * .px-#px  - X axis padding, left/right
 * .py-#px  - Y axis padding, top/bottom
 * .pt-#px  - Top padding
 * .pr-#px  - Right padding
 * .pb-#px  - Bottom padding
 * .pl-#px  - Left padding
 */
@mixin style() {
  @while $_count <= $_max {
    @each $prop, $abbrev in (margin: m, padding: p) {
      .#{$abbrev}-#{$_count}px {
        #{$prop}: #{$_count}px !important;
      }

      .#{$abbrev}x-#{$_count}px {
        #{$prop}-left: #{$_count}px !important;
        #{$prop}-right: #{$_count}px !important;
      }

      .#{$abbrev}y-#{$_count}px {
        #{$prop}-top: #{$_count}px !important;
        #{$prop}-bottom: #{$_count}px !important;
      }

      .#{$abbrev}t-#{$_count}px {
        #{$prop}-top: #{$_count}px !important;
      }

      .#{$abbrev}r-#{$_count}px {
        #{$prop}-right: #{$_count}px !important;
      }

      .#{$abbrev}b-#{$_count}px {
        #{$prop}-bottom: #{$_count}px !important;
      }

      .#{$abbrev}l-#{$_count}px {
        #{$prop}-left: #{$_count}px !important;
      }
    }

    $_count: $_count + 1;
  }
}
